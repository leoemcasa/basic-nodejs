# .github/workflows/deploy.yml

name: Build and Deploy to K3S

on:
  push:
    branches:
      - main # Trigger this workflow on every push to the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest # The build can run on a standard GitHub runner
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          # Arguments passed to the sonar-scanner
          args: >
            -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}
            -Dsonar.sources=.

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/basic-nodejs:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/basic-nodejs:latest

  deploy:
    needs: build-and-push
    runs-on: self-hosted
    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/basic-nodejs
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Latest Rancher CLI and Configure Context
        run: |
          # Use the GitHub API to find the URL for the latest linux-amd64 CLI release
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/rancher/cli/releases/latest | \
          grep "browser_download_url.*linux-amd64" | cut -d '"' -f 4)

          # Download the file found above
          echo "Downloading Rancher CLI from $DOWNLOAD_URL"
          wget $DOWNLOAD_URL

          # The downloaded filename will change, so use a wildcard '*' to extract it
          tar -zxvf rancher-linux-amd64-*.tar.gz
          sudo mv rancher-*/rancher /usr/local/bin/

          # Login to your Rancher instance
          { echo "yes"; sleep 1; echo "1"; } | rancher login ${{ secrets.RANCHER_URL }} --token ${{ secrets.RANCHER_TOKEN }} --insecure

      - name: Update Kubernetes Manifest and Deploy
        run: |
          sed -i 's|image: .*|image: ${{ env.IMAGE_NAME }}:latest|g' k8s/deployment.yaml
          rancher kubectl apply -f k8s/